// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api-proto/onboarding/register/register.proto

package regsiterpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Location struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lan                  float64  `protobuf:"fixed64,2,opt,name=lan,proto3" json:"lan,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d26b37d3f415c81, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Location) GetLan() float64 {
	if m != nil {
		return m.Lan
	}
	return 0
}

func (m *Location) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type RegisterUserRequest struct {
	Phone                string    `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	FirstName            string    `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string    `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	CompanyName          string    `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	CountryCode          string    `protobuf:"bytes,5,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Location             *Location `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	UserName             string    `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Email                string    `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Password             string    `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d26b37d3f415c81, []int{1}
}

func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (m *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(m, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *RegisterUserRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *RegisterUserRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *RegisterUserRequest) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *RegisterUserRequest) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *RegisterUserRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *RegisterUserRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *RegisterUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RegisterUserResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	AccessToken          string   `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserResponse) Reset()         { *m = RegisterUserResponse{} }
func (m *RegisterUserResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterUserResponse) ProtoMessage()    {}
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d26b37d3f415c81, []int{2}
}

func (m *RegisterUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserResponse.Unmarshal(m, b)
}
func (m *RegisterUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserResponse.Marshal(b, m, deterministic)
}
func (m *RegisterUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserResponse.Merge(m, src)
}
func (m *RegisterUserResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterUserResponse.Size(m)
}
func (m *RegisterUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserResponse proto.InternalMessageInfo

func (m *RegisterUserResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RegisterUserResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterUserResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func init() {
	proto.RegisterType((*Location)(nil), "regsiterpb.Location")
	proto.RegisterType((*RegisterUserRequest)(nil), "regsiterpb.RegisterUserRequest")
	proto.RegisterType((*RegisterUserResponse)(nil), "regsiterpb.RegisterUserResponse")
}

func init() {
	proto.RegisterFile("api-proto/onboarding/register/register.proto", fileDescriptor_5d26b37d3f415c81)
}

var fileDescriptor_5d26b37d3f415c81 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x95, 0xee, 0x76, 0x37, 0x99, 0x22, 0x81, 0x4c, 0x0f, 0xa1, 0xfc, 0x2b, 0x11, 0x87,
	0x0a, 0x41, 0x03, 0xcb, 0x8d, 0x2b, 0x17, 0x0e, 0x88, 0x43, 0x80, 0x73, 0xe5, 0x26, 0x43, 0xb0,
	0x48, 0x3c, 0xc1, 0xe3, 0x2e, 0x5a, 0x21, 0x38, 0xf0, 0x06, 0x88, 0xf7, 0xe0, 0x65, 0x78, 0x05,
	0x1e, 0x04, 0xd9, 0x8e, 0xb7, 0x54, 0x82, 0xdb, 0xcc, 0x6f, 0xbe, 0x64, 0x66, 0xbe, 0x31, 0x3c,
	0x94, 0x83, 0x7a, 0x34, 0x18, 0xb2, 0x54, 0x92, 0xde, 0x92, 0x34, 0x8d, 0xd2, 0x6d, 0x69, 0xb0,
	0x55, 0x6c, 0xd1, 0x5c, 0x06, 0x6b, 0x2f, 0x11, 0x60, 0xb0, 0x65, 0x65, 0xd1, 0x0c, 0xdb, 0xc5,
	0xad, 0x96, 0xa8, 0xed, 0xb0, 0x94, 0x83, 0x2a, 0xa5, 0xd6, 0x64, 0xa5, 0x55, 0xa4, 0x39, 0x28,
	0x8b, 0x17, 0x90, 0xbe, 0xa4, 0xda, 0x23, 0x71, 0x0d, 0x8e, 0x3a, 0x69, 0xf3, 0x64, 0x99, 0xac,
	0x92, 0xca, 0x85, 0x81, 0xe8, 0x7c, 0x12, 0x89, 0x16, 0x39, 0x9c, 0xca, 0xa6, 0x31, 0xc8, 0x9c,
	0x1f, 0x2d, 0x93, 0x55, 0x56, 0xc5, 0xb4, 0xf8, 0x39, 0x81, 0xeb, 0xd5, 0x38, 0xc6, 0x5b, 0x46,
	0x53, 0xe1, 0xc7, 0x1d, 0xb2, 0x15, 0x73, 0x98, 0x0e, 0xef, 0x49, 0xa3, 0xff, 0x6f, 0x56, 0x85,
	0x44, 0xdc, 0x06, 0x78, 0xa7, 0x0c, 0xdb, 0x8d, 0x96, 0x3d, 0xfa, 0x06, 0x59, 0x95, 0x79, 0xf2,
	0x4a, 0xf6, 0x28, 0x6e, 0x42, 0xd6, 0xc9, 0x58, 0x0d, 0x8d, 0x52, 0x07, 0x7c, 0xf1, 0x1e, 0x5c,
	0xa9, 0xa9, 0x1f, 0xa4, 0xbe, 0x08, 0xf5, 0x63, 0x5f, 0x9f, 0x8d, 0x6c, 0x2f, 0xd9, 0x69, 0x6b,
	0x2e, 0x36, 0x35, 0x35, 0x98, 0x4f, 0xa3, 0xc4, 0xb3, 0xe7, 0xd4, 0xa0, 0x78, 0x0c, 0x69, 0x37,
	0x6e, 0x9e, 0x9f, 0x2c, 0x93, 0xd5, 0xec, 0x6c, 0xbe, 0xde, 0xdb, 0xb6, 0x8e, 0xae, 0x54, 0x97,
	0x2a, 0x37, 0xd4, 0x8e, 0xd1, 0x84, 0xa6, 0xa7, 0x61, 0x28, 0x07, 0x7c, 0xc7, 0x39, 0x4c, 0xb1,
	0x97, 0xaa, 0xcb, 0xd3, 0xb0, 0xa6, 0x4f, 0xc4, 0x02, 0xd2, 0x41, 0x32, 0x7f, 0x22, 0xd3, 0xe4,
	0x59, 0xf8, 0x22, 0xe6, 0x45, 0x0b, 0xf3, 0x43, 0xbf, 0x78, 0x20, 0xcd, 0xe8, 0x2c, 0xee, 0x91,
	0x59, 0xb6, 0xd1, 0xb2, 0x98, 0x0a, 0x01, 0xc7, 0x7e, 0x1b, 0x67, 0xd7, 0xb4, 0xf2, 0xb1, 0xdb,
	0x54, 0xd6, 0x35, 0x32, 0x6f, 0x2c, 0x7d, 0x40, 0x3d, 0x9a, 0x35, 0x0b, 0xec, 0x8d, 0x43, 0x67,
	0xdf, 0x13, 0xb8, 0x1a, 0x3b, 0xbd, 0x46, 0x73, 0xae, 0x6a, 0x14, 0x5f, 0x0f, 0x8f, 0x15, 0xf1,
	0xdd, 0xbf, 0x2d, 0xf8, 0xc7, 0x35, 0x17, 0xcb, 0xff, 0x0b, 0xc2, 0xf8, 0xc5, 0xfd, 0x6f, 0xbf,
	0x7e, 0xff, 0x98, 0xdc, 0x29, 0x6e, 0x94, 0xe7, 0x4f, 0x4a, 0x67, 0xcf, 0xfe, 0x95, 0x7e, 0xf6,
	0xb7, 0xff, 0xf2, 0x2c, 0x79, 0xb0, 0x3d, 0xf1, 0xcf, 0xef, 0xe9, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x27, 0x8e, 0x27, 0x3d, 0xd8, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegisterServiceClient is the client API for RegisterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegisterServiceClient interface {
	RegisterUserService(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
}

type registerServiceClient struct {
	cc *grpc.ClientConn
}

func NewRegisterServiceClient(cc *grpc.ClientConn) RegisterServiceClient {
	return &registerServiceClient{cc}
}

func (c *registerServiceClient) RegisterUserService(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/regsiterpb.RegisterService/RegisterUserService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegisterServiceServer is the server API for RegisterService service.
type RegisterServiceServer interface {
	RegisterUserService(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
}

func RegisterRegisterServiceServer(s *grpc.Server, srv RegisterServiceServer) {
	s.RegisterService(&_RegisterService_serviceDesc, srv)
}

func _RegisterService_RegisterUserService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterServiceServer).RegisterUserService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/regsiterpb.RegisterService/RegisterUserService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterServiceServer).RegisterUserService(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RegisterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "regsiterpb.RegisterService",
	HandlerType: (*RegisterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUserService",
			Handler:    _RegisterService_RegisterUserService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api-proto/onboarding/register/register.proto",
}
