// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api-proto/onboarding/forgotpassword/resetpswd/resetpswd.proto

package resetpswdpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResetPasswordRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordRequest) Reset()         { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()    {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3561648799270f7d, []int{0}
}

func (m *ResetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordRequest.Unmarshal(m, b)
}
func (m *ResetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ResetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordRequest.Merge(m, src)
}
func (m *ResetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordRequest.Size(m)
}
func (m *ResetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordRequest proto.InternalMessageInfo

func (m *ResetPasswordRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ResetPasswordResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	VerifyCode           string   `protobuf:"bytes,3,opt,name=verify_code,json=verifyCode,proto3" json:"verify_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordResponse) Reset()         { *m = ResetPasswordResponse{} }
func (m *ResetPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordResponse) ProtoMessage()    {}
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3561648799270f7d, []int{1}
}

func (m *ResetPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordResponse.Unmarshal(m, b)
}
func (m *ResetPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordResponse.Marshal(b, m, deterministic)
}
func (m *ResetPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordResponse.Merge(m, src)
}
func (m *ResetPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordResponse.Size(m)
}
func (m *ResetPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordResponse proto.InternalMessageInfo

func (m *ResetPasswordResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResetPasswordResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResetPasswordResponse) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

func init() {
	proto.RegisterType((*ResetPasswordRequest)(nil), "resetpswdpb.ResetPasswordRequest")
	proto.RegisterType((*ResetPasswordResponse)(nil), "resetpswdpb.ResetPasswordResponse")
}

func init() {
	proto.RegisterFile("api-proto/onboarding/forgotpassword/resetpswd/resetpswd.proto", fileDescriptor_3561648799270f7d)
}

var fileDescriptor_3561648799270f7d = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x49, 0xfc, 0x87, 0x5b, 0xf0, 0xb0, 0x28, 0xc4, 0x2a, 0xd8, 0xe6, 0x20, 0xbd, 0x98,
	0x45, 0x3d, 0x7b, 0xf2, 0x05, 0x24, 0xe2, 0x59, 0x36, 0xdd, 0x49, 0x58, 0xd0, 0x9d, 0x75, 0x66,
	0x9b, 0x20, 0xe2, 0x45, 0x7c, 0x03, 0xcf, 0x3e, 0x95, 0xaf, 0xe0, 0x83, 0x48, 0x93, 0xa6, 0x94,
	0x22, 0xbd, 0xcd, 0xce, 0xf7, 0xfb, 0x96, 0xf9, 0x3e, 0x71, 0xa3, 0xbd, 0xbd, 0xf0, 0x84, 0x01,
	0x15, 0xba, 0x02, 0x35, 0x19, 0xeb, 0x2a, 0x55, 0x22, 0x55, 0x18, 0xbc, 0x66, 0x6e, 0x90, 0x8c,
	0x22, 0x60, 0x08, 0x9e, 0x9b, 0x95, 0x29, 0x6b, 0x3d, 0x72, 0xb0, 0x5c, 0xf8, 0x62, 0x78, 0x5a,
	0x21, 0x56, 0x4f, 0xa0, 0xb4, 0xb7, 0x4a, 0x3b, 0x87, 0x41, 0x07, 0x8b, 0x8e, 0x3b, 0x34, 0x3d,
	0x17, 0x87, 0xf9, 0x1c, 0xbe, 0x5b, 0xfc, 0x9a, 0xc3, 0xcb, 0x0c, 0x38, 0xc8, 0x03, 0x11, 0x5b,
	0x93, 0x44, 0xa3, 0x68, 0xb2, 0x9f, 0xc7, 0xd6, 0xa4, 0xa5, 0x38, 0x5a, 0xe3, 0xd8, 0xa3, 0x63,
	0x90, 0x89, 0xd8, 0x7b, 0x06, 0x66, 0x5d, 0xc1, 0x82, 0xee, 0x9f, 0x52, 0x8a, 0xed, 0x29, 0x1a,
	0x48, 0xe2, 0x51, 0x34, 0xd9, 0xc9, 0xdb, 0x59, 0x9e, 0x89, 0x41, 0x0d, 0x64, 0xcb, 0xd7, 0xc7,
	0x56, 0xda, 0x6a, 0x1d, 0xa2, 0x5b, 0xdd, 0xa2, 0x81, 0xab, 0xef, 0x68, 0xed, 0xa0, 0x7b, 0xa0,
	0xda, 0x4e, 0x41, 0x7e, 0x46, 0x22, 0x59, 0x0a, 0xd8, 0x90, 0x79, 0x60, 0xa0, 0x5e, 0x1c, 0x67,
	0x2b, 0x89, 0xb3, 0xff, 0x02, 0x0d, 0xd3, 0x4d, 0x48, 0x97, 0x25, 0x1d, 0x7f, 0xfc, 0xfc, 0x7e,
	0xc5, 0x27, 0xf2, 0x58, 0xd5, 0x97, 0x6a, 0xc6, 0x40, 0x6a, 0xee, 0xe8, 0xfb, 0x7e, 0xb3, 0xe6,
	0xbd, 0xd8, 0x6d, 0x6b, 0xbb, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xa7, 0x31, 0x01, 0xa2,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResetPasswordServiceClient is the client API for ResetPasswordService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResetPasswordServiceClient interface {
	ResetPassowrdUserService(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error)
}

type resetPasswordServiceClient struct {
	cc *grpc.ClientConn
}

func NewResetPasswordServiceClient(cc *grpc.ClientConn) ResetPasswordServiceClient {
	return &resetPasswordServiceClient{cc}
}

func (c *resetPasswordServiceClient) ResetPassowrdUserService(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error) {
	out := new(ResetPasswordResponse)
	err := c.cc.Invoke(ctx, "/resetpswdpb.ResetPasswordService/ResetPassowrdUserService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResetPasswordServiceServer is the server API for ResetPasswordService service.
type ResetPasswordServiceServer interface {
	ResetPassowrdUserService(context.Context, *ResetPasswordRequest) (*ResetPasswordResponse, error)
}

func RegisterResetPasswordServiceServer(s *grpc.Server, srv ResetPasswordServiceServer) {
	s.RegisterService(&_ResetPasswordService_serviceDesc, srv)
}

func _ResetPasswordService_ResetPassowrdUserService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResetPasswordServiceServer).ResetPassowrdUserService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resetpswdpb.ResetPasswordService/ResetPassowrdUserService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResetPasswordServiceServer).ResetPassowrdUserService(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResetPasswordService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resetpswdpb.ResetPasswordService",
	HandlerType: (*ResetPasswordServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ResetPassowrdUserService",
			Handler:    _ResetPasswordService_ResetPassowrdUserService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api-proto/onboarding/forgotpassword/resetpswd/resetpswd.proto",
}
