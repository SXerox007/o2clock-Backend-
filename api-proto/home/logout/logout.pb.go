// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api-proto/home/logout/logout.proto

package logoutpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogoutRequest struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_692295ed16a6de47, []int{0}
}

func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (m *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(m, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type LogoutResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_692295ed16a6de47, []int{1}
}

func (m *LogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutResponse.Unmarshal(m, b)
}
func (m *LogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutResponse.Marshal(b, m, deterministic)
}
func (m *LogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutResponse.Merge(m, src)
}
func (m *LogoutResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutResponse.Size(m)
}
func (m *LogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutResponse proto.InternalMessageInfo

func (m *LogoutResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *LogoutResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*LogoutRequest)(nil), "logoutpb.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "logoutpb.LogoutResponse")
}

func init() { proto.RegisterFile("api-proto/home/logout/logout.proto", fileDescriptor_692295ed16a6de47) }

var fileDescriptor_692295ed16a6de47 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4a, 0x2c, 0xc8, 0xd4,
	0x2d, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0xc8, 0xcf, 0x4d, 0xd5, 0xcf, 0xc9, 0x4f, 0xcf, 0x2f,
	0x2d, 0x81, 0x52, 0x7a, 0x60, 0x09, 0x21, 0x0e, 0x08, 0xaf, 0x20, 0x49, 0x4a, 0x26, 0x3d, 0x3f,
	0x3f, 0x3d, 0x27, 0x55, 0x3f, 0xb1, 0x20, 0x53, 0x3f, 0x31, 0x2f, 0x2f, 0xbf, 0x24, 0xb1, 0x24,
	0x33, 0x3f, 0xaf, 0x18, 0xa2, 0x4e, 0xc9, 0x88, 0x8b, 0xd7, 0x07, 0xac, 0x32, 0x28, 0xb5, 0xb0,
	0x34, 0xb5, 0xb8, 0x44, 0x48, 0x91, 0x8b, 0x27, 0x31, 0x39, 0x39, 0xb5, 0xb8, 0x38, 0xbe, 0x24,
	0x3f, 0x3b, 0x35, 0x4f, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x88, 0x1b, 0x22, 0x16, 0x02, 0x12,
	0x52, 0xb2, 0xe3, 0xe2, 0x83, 0xe9, 0x29, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x92, 0xe0, 0x62,
	0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x85, 0xaa, 0x87, 0x71, 0x85, 0x84, 0xb8, 0x58, 0x92,
	0xf3, 0x53, 0x52, 0x25, 0x98, 0x14, 0x18, 0x35, 0x58, 0x83, 0xc0, 0x6c, 0xa3, 0x62, 0x98, 0x9d,
	0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x49, 0x5c, 0x82, 0x10, 0x81, 0xd0, 0xe2, 0xd4,
	0x22, 0x98, 0xa0, 0xb8, 0x1e, 0xcc, 0x0b, 0x7a, 0x28, 0x2e, 0x94, 0x92, 0xc0, 0x94, 0x80, 0x38,
	0x43, 0x49, 0xaa, 0xe9, 0xf2, 0x93, 0xc9, 0x4c, 0x22, 0x4a, 0xfc, 0xfa, 0x65, 0x86, 0xfa, 0xa5,
	0xc5, 0xa9, 0x45, 0xd0, 0x30, 0xb1, 0x62, 0xd4, 0x4a, 0x62, 0x03, 0xfb, 0xd7, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0xd5, 0x32, 0x45, 0xba, 0x3d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogoutServiceClient is the client API for LogoutService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogoutServiceClient interface {
	LogoutUserService(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
}

type logoutServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogoutServiceClient(cc *grpc.ClientConn) LogoutServiceClient {
	return &logoutServiceClient{cc}
}

func (c *logoutServiceClient) LogoutUserService(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, "/logoutpb.LogoutService/LogoutUserService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogoutServiceServer is the server API for LogoutService service.
type LogoutServiceServer interface {
	LogoutUserService(context.Context, *LogoutRequest) (*LogoutResponse, error)
}

func RegisterLogoutServiceServer(s *grpc.Server, srv LogoutServiceServer) {
	s.RegisterService(&_LogoutService_serviceDesc, srv)
}

func _LogoutService_LogoutUserService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogoutServiceServer).LogoutUserService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logoutpb.LogoutService/LogoutUserService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogoutServiceServer).LogoutUserService(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogoutService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logoutpb.LogoutService",
	HandlerType: (*LogoutServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogoutUserService",
			Handler:    _LogoutService_LogoutUserService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api-proto/home/logout/logout.proto",
}
